<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <!-- Don't think we're using this (Anubhav, 8:27) -->
    <!-- <script src="https://cdn.jsdelivr.net/npm/vue"></script> -->
    <script src="/socket.io/socket.io.js"></script>
    <title>FaceOff</title>
    <!-- Let's borrow a cool looking Font from Google -->
    <link rel="stylesheet" type="text/css" href="../public/css/styles.css">
    <link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css?family=Quicksand:300,400,700" />
    <link rel="stylesheet" type="text/css" href="../public/css/foundation.min.css" />
    <link rel="stylesheet" type="text/css" href="../public/css/responsive-tables.css" />
    <link rel="stylesheet" type="text/css" href="../public/css/custom_faceoff.css" />
    <link rel="stylesheet" type="text/css" href="../public/css/animate.min.css" />
    <script type="text/javascript" src="../public/js/bodymovin.js"></script>
    <script src="../public/js/jquery.js"></script>
  </head>
  <body>
    <div class="grid-x align-top" style="height: 100vh;">
      <div class="large-12 cell">
        <div class="large-12 cell" style="height: auto">
          <div class="grid-x">

            <div class="top-bar" style="width: 100%" id="responsive-menu">
              <div class="top-bar-left">
                <ul class="menu">
                  <li><a class="button animated fadeInDown" id="quit-btn">Quit Game</a></li>
                  <li><a href="#" class="button animated fadeInDown" id="browse-btn">Browse Games</a></li>
                </ul>
              </div>
              <div class="top-bar-right">
                <ul class="menu">
                  <li>
                    <div id="fb-root"></div>
                    <fb:login-button id="fb-btn" class="fb-login-button" scope="public_profile, user_friends, email" onlogin="checkLoginState();" data-max-rows="1" data-size="large" data-button-type="continue_with" data-show-faces="false" data-auto-logout-link="true" data-use-continue-as="false"></fb:login-button>
                  </li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div class="large-12 cell" id="gameArea">
        <!-- This is where the templates defined below will be used -->

      </div>

      <!-- Main Title Screen that appears when the page loads for the first time -->
      <script id="intro-screen-template" type="text/template">
        <div class="grix-x" style="height: 100vh; background-color:rgb(255,51,51)">
          <div class="large-12 cell">
            <div id="bodymovin"></div>
              <div class="titleWrapper">
                <div class="title" style="margin-bottom: 40px;"><p class="animated fadeInUp" id="description1">Raphael, Anubhav, Paul, and Corey present: Face Off</p><p class="animated fadeInUp" id="description2">A web platform that utilizes Microsoft's Azure emotion API</p></div>

                <div class="buttons">
                    <button id="btnCreateGame" class="btn left animated fadeInLeft">CREATE</button>
                    <button id="btnJoinGame" class="btn right animated fadeInRight">JOIN</button>
                    <div style="clear:both"></div>
                </div>

            </div>
          </div>
        </div>
      </script>

      <!-- This screen appears when a user clicks "CREATE" on the Title Screen -->
      <script id="create-game-template-1" type="text/template">
          <div class="createGameWrapper">
              <div class="info animated fadeInUp" id="nameField">
                  <label for="inputHostName">Your Name:</label>
                  <input id="inputHostName" type="text" />
              </div>

              <div class="info buttons">
                  <button id="btnHost" class="btn animated fadeInUp">Host Game</button>
              </div>
          </div>
      </script>

      <!-- This screen appears when a user clicks "CREATE" on the Title Screen -->
      <script id="create-game-template-2" type="text/template">
          <div class="createGameWrapper">

              <div class="info animated fadeInUp">Open this site on your other devices:</div>
              <div id="gameURL" class="infoBig animated fadeIn">Error!</div>

              <div class="info animated fadeInUp">Then click <strong>JOIN</strong> and <br/> enter the following Game ID:</div>
              <div id="spanNewGameCode" class="gameId animated fadeIn">Error!</div>

              <div id="playersWaiting"></div>
          </div>
      </script>

      <!-- This screen appears when a player clicks "JOIN" on the Title Screen -->
      <script id="join-game-template" type="text/template">
          <div class="joinGameWrapper">
              <div class="info animated fadeIn">
                  <label for="inputPlayerName">Your Name:</label>
                  <input id="inputPlayerName" type="text" />
              </div>

              <div class="info animated fadeIn">
                  <label for="inputGameId">Game ID:</label>
                  <input type="number" id="inputGameId" type="text"/>
              </div>

              <div class="info buttons animated fadeIn">
                  <button id="btnStart" class="btn">Start</button>
                  <div id="playerWaitingMessage"></div>
              </div>
          </div>
      </script>

      <!-- This is the 'Host' screen. It displays the word for each player to match -->
      <script id="game-template" type="text/template">
        <div class="grid-x align-top">
          <div class="medium-3 cell leaderboard animated rotateInDownLeft" style="padding: 10px;">
            <h4 class="text-center">Leaderboard</h4>
            <table class="responsive text-center" style="width: 100%">
              <tbody id="scoreTable">
              </tbody>
            </table>
          </div>

          <div class="medium-9 cell text-center animated fadeInRight" style="border-radius: 20px; height: 60vh;">
            <div id="timer">5</div>
            <canvas id="canvas" style="display: none;">
            </canvas>
            <div id="yt" style="pointer-events: none;">
            </div>

            <div class="flex-child-auto align-stretch" style="">
              <div class="grid-x">
                <div class="small-12 cell text-middle">
                  <ul class="player-list" style="list-style-type: none; display: inline;">
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>
      </script>

      <!-- This screen appears after game ends -->
      <script id="end-game-template" type="text/template">
        <div class="grix-x" style="height: 100vh; background-color:rgb(255,51,51)">
          <div class="large-12 cell">
            <div id="bodymovin"></div>
              <div class="titleWrapper">
                <div class="title" style="margin-bottom: 40px;">
                  <p class="animated fadeInUp" id="description2" style="font-size: 30px;"></p>
                  <p class="animated fadeInUp" id="description1" style="font-size: 25px;"></p>
                  <p class="animated fadeInUp" id="description3" style="font-size: 22px;"></p>
                </div>
                <div class="buttons">
                    <button id="btnMainMenu" class="btn left animated fadeInLeft">Main Menu</button>
                    <button id="btnNewLobby" class="btn right animated fadeInRight">New Lobby</button>
                    <div style="clear:both"></div>
                </div>

            </div>
          </div>
        </div>
      </script>

    </div>
  </body>
  <!-- script.js is where all the client-side game logic -->
  <script src="../public/js/what-input.js"></script>
  <script src="../public/js/foundation.min.js"></script>
  <script src="../public/js/custom_faceoff.js"></script>
  <script src="../public/js/script.js"></script>
  <!-- Bodymovin script -->
  <script>
    var anim;
    var elem = document.getElementById('bodymovin')
    var animData = {
        container: elem,
        renderer: 'svg',
        loop: false,
        autoplay: false,
        rendererSettings: {
            progressiveLoad:false
        },
        path: 'json/data.json'
    };
    anim = bodymovin.loadAnimation(animData);
  </script>
  <script>
    function storeToken() {
      var postTokenReq = new XMLHttpRequest();
      postTokenReq.onload = reqListener;
      postTokenReq.onerror = reqError;

      var aKey = localStorage['accessToken'];

      FB.api('/me', function(response) {
        var j = {'accessToken': aKey, 'fb_id': response.id}
        console.log(aKey, response.id);
        postTokenReq.open('post', './storeToken', true);
        postTokenReq.setRequestHeader('Content-type', 'application/json');
        postTokenReq.onreadystatechange = function() {
           if (postTokenReq.readyState == XMLHttpRequest.DONE && postTokenReq.status == 200) {
            console.log('storToken onreadystatechange');
          }
        }
        postTokenReq.send(j);
      });
    }

    function statusChangeCallback(response) {
      console.log('statusChangeCallback');
      //console.log(response);

      if (response.status === 'connected') {
        var uid = response.authResponse.userID;
        var accessToken = response.authResponse.accessToken;
        localStorage['accessToken'] = JSON.stringify(accessToken);
        storeToken();
      } else if (response.status === 'not_authorized') {
        console.log('User has logged into FB but not authorized app');
      } else {
        console.log('Something is wrong; not authorized');
      }
    }

    function checkLoginState() {
      FB.getLoginStatus(function(response) {
        statusChangeCallback(response);
      });
    }

    window.fbAsyncInit = function() {
      FB.init({
        appId      : '207752326429628',
        cookie     : true,
        xfbml      : true,
        version    : 'v2.10'
      });
      FB.AppEvents.logPageView();

      FB.getLoginStatus(function(response) {
        statusChangeCallback(response);
      });

      FB.Event.subscribe('auth.login', function(response) {
        console.log(response);
      });
    };

    (function(d, s, id) {
      var js, fjs = d.getElementsByTagName(s)[0];
      if (d.getElementById(id)) return;
      js = d.createElement(s); js.id = id;
      js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.10&appId=207752326429628";
      fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));

    function reqListener() {
      var data = JSON.parse(this.responseText);
      console.log(data);
    }

    function reqError(err) {
      console.log('Fetch Error :-S', err);
    }

    function login() {
      FB.login(function(response) {
        if (response.status === 'connected') {
          console.log(response.authResponse.accessToken);
          //var fbConnected = new XMLHttpRequest();
          //fbConnected.onload = reqListener;
          //fbConnected.onError = reqError;
          //fbConnected.open('get', './fbconnected', true);
          //fbConnected.send();
        } else {
          console.log('Not authenicated');
        }
      });
    }

    function testAPI() {
      console.log('testAPI');
      FB.api('/me', function(response) {
        console.log('Successful login for: ' + response.name);
      });
      FB.api('/me/permissions', function(response) {
        console.log(response);
      });
    }


  </script>
</html>
